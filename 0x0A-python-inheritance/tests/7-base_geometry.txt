==========================
Tests for 7-base_geometry.py
==========================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

>>> bg.integer_validator("name", [1, 2])
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", 3.4)
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", (1,))
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", {})
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", True)
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("name")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("asd", "qwe", "123")
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> bg.area(5)
Traceback (most recent call last):
TypeError: area() takes 1 positional argument but 2 were given

>>> bg.integer_validator("lateral", complex(24, 5.5))
Traceback (most recent call last):
TypeError: lateral must be an integer

>>> bg.integer_validator("name", {"a", "b"})
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", {"a": "b"})
Traceback (most recent call last):
TypeError: name must be an integer

TypeError: set must be an integer
>>> b.integer_validator("name", frozenset(["a", "b"]))
Traceback (most recent call last):
TypeError: frozenset must be an integer